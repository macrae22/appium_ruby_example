name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15

    steps:
      - uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Warm up Xcode and SDK
        run: |
          echo "Running xcrun to determine SDK version..."
          xcrun --sdk iphonesimulator --show-sdk-version
          echo "Xcode SDK check complete."
          
      - name: Install Appium and XCUITest Driver
        run: |
          npm install -g appium
          appium driver install xcuitest
          
      - name: Start Appium Server and Wait
        run: |
          appium &>/dev/null &
          echo "Waiting for Appium server to start..."
          timeout=60
          while ! curl -s http://127.0.0.1:4723/status && [ $timeout -gt 0 ]; do
            sleep 1
            timeout=$((timeout-1))
          done
          if [ $timeout -eq 0 ]; then
            echo "Appium server failed to start."
            exit 1
          fi
          echo "Appium server is ready."

      - name: DEBUG
        run: xcrun simctl list devices

      - name: Boot Simulator
        # In the "Boot Simulator" step of main.yml
        run: |
          echo "Searching for simulator UDID..."
          
          # This awk script correctly parses the output to find the UDID
          UDID=$(xcrun simctl list devices | awk '
            /-- iOS 18.1 --/ {in_section=1}
            /-- iOS/ && !/-- iOS 18.1 --/ {in_section=0}
            in_section && /iPhone SE \(3rd generation\)/ {
              match($0, /\(([-A-Z0-9]+)\)/);
              if (RSTART) {
                print substr($0, RSTART+1, RLENGTH-2);
                exit;
              }
            }
          ')
        
          echo "Found simulator UDID: $UDID"
        
          if [ -z "$UDID" ]; then
            echo "ERROR: Could not find UDID for 'iPhone SE (3rd generation)' on iOS 18.1."
            exit 1
          fi
        
          echo "Booting simulator..."
          xcrun simctl bootstatus "$UDID" -b
          echo "Simulator booted successfully."

      - name: DEBUG
        run: xcrun simctl list devices booted
          
      - name: Test
        run: bundle exec rspec --format documentation --backtrace --format html --out spec/test-results.html

      - name: DEBUG
        run: xcrun simctl list devices booted

      - name: Archive All Logs and Reports
        # This step will run even if the "Test" step fails
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-and-debug-logs
          path: |
            spec/test-results.html
            appium.log
